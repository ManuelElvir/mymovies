{"version":3,"file":"static/js/457.b78e09f1.chunk.js","mappings":"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","sources":["components/Sidebar/Sidebar.module.scss","components/Logo/Logo.module.scss","components/Logo/Logo.Component.tsx","components/Sidebar/Sidebar.component.tsx","components/Navbar/Navbar.module.scss","components/Navbar/Navbar.component.tsx","components/TopBar/TopBar.module.scss","webpack://my-movies/./src/components/IconButton/IconButton.module.scss?ff49","components/IconButton/IconButton.Component.tsx","components/TopBar/TopBar.component.tsx","layouts/withMainLayout/withMain.Layout.tsx","pages/TV/Season/Show.Page.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"main\":\"Sidebar_main__cxmGs\"};","// extracted by mini-css-extract-plugin\nexport default {\"main\":\"Logo_main__G-vnZ\"};","import React from 'react'\nimport styles from './Logo.module.scss'\nimport { useThemeMode } from '../../context/ThemeMode'\n\ntype LogoProps = {\n    large?: boolean,\n}\n\nconst Logo : React.FC<LogoProps> = ({large= false}) => {\n    const {themeMode} = useThemeMode()\n\n    const getLogoSrc = () => {\n        if(large){\n            if(themeMode==='dark') return 'logo-dark.svg'\n            else return 'logo-light.svg'\n        }\n        return 'icon.svg'\n    }\n    return(\n        <div className={styles.logoContainer}>\n            <img src={getLogoSrc()} alt='myMovies' />\n        </div>\n    )\n}\n\nexport default React.memo(Logo)","import React from'react'\nimport { Icon } from '@iconify/react';\nimport { useLocation } from 'react-router-dom'\nimport styles from './Sidebar.module.scss'\nimport Logo from '../Logo/Logo.Component';\n\n\ntype SidebarItem = {\n    key: string|number\n    label : string\n    route: string\n    icon: string\n}\n\ntype SidebarProps = {\n    routes : Array<SidebarItem>\n}\n\nconst SidebarElement = ({label, route, icon, isActive}:SidebarItem & {isActive: boolean}) => {\n    return (\n        <div className={`${isActive?styles.active:''} ${styles.navigationItem}`}>\n            <Icon className={styles.icon} icon={icon} />\n            <span className={styles.label}>{label}</span>\n        </div>\n    )\n}\n\nconst Sidebar: React.FC<SidebarProps> =  ({routes}) => {\n    const {pathname} = useLocation()\n    return(\n        <div className={styles.navigation}>\n            <div className={styles.logoContainer}>\n                <Logo />\n            </div>\n            <div className={styles.navigationContent}>\n                {routes.map((item:SidebarItem, index:number) => <SidebarElement isActive={pathname===item.route} {...item} />)}\n            </div>\n        </div>\n    )\n}\n\nexport default Sidebar","// extracted by mini-css-extract-plugin\nexport default {\"main\":\"Navbar_main__QELHF\"};","import React from'react'\nimport { Icon } from '@iconify/react';\nimport { useLocation } from 'react-router-dom'\nimport styles from './Navbar.module.scss'\nimport Logo from '../Logo/Logo.Component';\n\n\ntype NavbarItem = {\n    key: string|number\n    label : string\n    route: string\n    icon: string\n}\n\ntype NavbarProps = {\n    routes : Array<NavbarItem>\n}\n\nconst NavbarElement = ({label, icon, isActive}:NavbarItem & {isActive: boolean}) => {\n    return (\n        <div className={`${isActive?styles.active:''} ${styles.navigationItem}`}>\n            <Icon className={styles.icon} icon={icon} />\n            <span className={styles.label}>{label}</span>\n        </div>\n    )\n}\n\nconst Navbar: React.FC<NavbarProps> =  ({routes}) => {\n    const {pathname} = useLocation()\n    return(\n        <div className={styles.navigation}>\n            <div className={styles.logoContainer}>\n                <Logo />\n            </div>\n            <div className={styles.navigationContent}>\n                {routes.map((item:NavbarItem, index:number) => <NavbarElement isActive={pathname===item.route} {...item} />)}\n            </div>\n        </div>\n    )\n}\n\nexport default Navbar","// extracted by mini-css-extract-plugin\nexport default {\"main\":\"TopBar_main__Eowv8\"};","// extracted by mini-css-extract-plugin\nexport default {\"main\":\"IconButton_main__ZVw2p\"};","import React from 'react'\nimport styles from './IconButton.module.scss'\nimport { Icon } from '@iconify/react'\n\ntype IconButtonProps = {\n    sharp?: 'rounded'|'circle'|'default',\n    fontSize: string|number,\n    bgColor?: string,\n    color?: string,\n    icon: string,\n    handleClick: () => void\n}\n\nconst IconButton : React.FC<IconButtonProps> = ({icon, sharp= 'default', fontSize, handleClick}) => {\n    return <button \n        onClick={handleClick}\n        className={`${styles.iconButton} ${styles[sharp]}`}>\n        <Icon icon={icon} fontSize={fontSize} />\n    </button>\n}\n\nexport default React.memo(IconButton)","import React from'react'\nimport { redirect } from \"react-router-dom\";\nimport styles from './TopBar.module.scss'\nimport Logo from '../Logo/Logo.Component';\nimport IconButton from '../IconButton';\n\n\ntype TopBarProps = {\n    title : string\n    withSearch?: boolean\n    actionButton?: {\n        icon: string\n        route: string\n    }\n}\n\nconst TopBar: React.FC<TopBarProps> =  ({title, withSearch, actionButton}) => {\n\n    const navigate =  (route:string) => (redirect(route))\n\n\n    return(\n        <div className={styles.topBar}>\n            <div className={styles.leftPart}>\n                <Logo />\n                <h2 className={styles.title}>{title}</h2>\n            </div>\n            <div className={styles.rightPart}>\n                {\n                    withSearch && <IconButton icon='ion:search' fontSize={24} sharp='rounded' handleClick={() => navigate(\"/search\")} />\n                }\n                {\n                    actionButton && <IconButton icon={actionButton.icon} fontSize={24} sharp='rounded' handleClick={() => navigate(actionButton.route)} />\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default TopBar","import React from 'react';\n\nimport Sidebar from '../../components/Sidebar'\nimport Navbar from '../../components/Navbar'\nimport TopBar from '../../components/TopBar'\n\nimport routes from './routes.json'\n\n\nconst withMainLayout = (\n    PageComponent:React.FC, \n    title: string, \n    actionButton: {\n        label : string\n        icon: string\n        route: string\n        key: string\n    }) => {\n    return () => (\n      <div>\n        <Sidebar routes={actionButton ? [...routes, actionButton]: routes} />\n        <div>\n            <TopBar title={title} withSearch={true} actionButton={actionButton} />\n            <PageComponent />\n            <Navbar routes={routes} />\n        </div>\n      </div>\n    );\n};\n\nexport default withMainLayout","import React from 'react'\nimport withMainLayout from '../../../layouts/withMainLayout'\n\ntype ShowProps = {\n}\n\nconst Show : React.FC<ShowProps> = () => {\n\n    return(\n        <div>\n\n        </div>\n    )\n}\n\nShow.displayName = 'TV-Program-Season'\n\nconst actionButton = {\n    key: \"library\",\n    label: \"My Library\",\n    route: \"/my-library\",\n    icon: \"solar:library-line-duotone\"\n}\n\nexport default withMainLayout(Show, Show.displayName||'TV-Program-Season', actionButton)"],"names":["Logo","_ref","_ref$large","large","themeMode","useThemeMode","_jsx","className","styles","children","src","alt","React","SidebarElement","label","icon","route","isActive","_jsxs","concat","Icon","_ref2","routes","pathname","useLocation","map","item","index","_objectSpread","NavbarElement","IconButton","_ref$sharp","sharp","fontSize","handleClick","onClick","title","withSearch","actionButton","navigate","redirect","PageComponent","Sidebar","_toConsumableArray","TopBar","Navbar","Show","displayName","withMainLayout","key"],"sourceRoot":""}